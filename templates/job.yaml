---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "container-build.fullname" . }}
  labels:
    {{- include "container-build.labels" . | nindent 4 }}
spec:
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "container-build.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if and (.Values.build.url.enabled) (.Values.build.url.authSecret.enabled) }}
          env:
            - name: USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.build.url.authSecret.name | default (include "container-build.configAuthSecretName" .) }}
                  key: username
            - name: PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.build.url.authSecret.name | default (include "container-build.configAuthSecretName" .) }}
                  key: password
          {{- end }}
          command:
            - "/usr/bin/bash"
            - "-c"
          args:
            - >
              buildah bud
              {{- if .Values.build.configMap.enabled }}
              --file /build/Dockerfile
              {{- else if .Values.build.url.enabled }}
              {{- if .Values.build.url.authSecret.enabled }}
              --file {{ include "container-build.basicAuthConfigUrl" . }}
              {{- else }}
              --file {{ .Values.build.url.uri }}
              {{- end }}
              {{- else if .Values.build.git.enabled }}
              --file {{ .Values.build.git.uri }}
              {{- end }}
              {{- if .Values.build.source.authSecret.enabled }}
              --authfile /root/source-auth
              {{- end }}
              --storage-driver vfs
              --tag "{{ .Values.build.destination.repository }}:{{ .Values.build.destination.tag }}"
              &&
              buildah push
              {{- with .Values.build.destination }}
              "{{ .repository }}:{{ .tag }}"
              docker://{{ .registry }}/{{ .repository }}:{{ .tag }}
              {{- end }}
              {{- if .Values.build.destination.authSecret.enabled }}
              --authfile /root/destination-auth
              {{- end }}
          volumeMounts:
            - name: cache
              mountPath: /var/containers
            - name: build
              mountPath: /build
            {{- if .Values.build.configMap.enabled }}
            - name: config
              mountPath: /build/Dockerfile
              subPath: Dockerfile
            {{- end }}
            {{- if and (.Values.build.git.enabled) (.Values.build.git.authSecret.enabled) }}
            - name: ssh-key
              mountPath: "/root/.ssh"
              readOnly: true
            {{- end }}
            {{- if .Values.build.source.authSecret.enabled }}
            - name: source-auth
              mountPath: "/root/source-auth"
              subPath: source-auth
              readOnly: true
            {{- end }}
            {{- if .Values.build.destination.authSecret.enabled }}
            - name: destination-auth
              mountPath: "/root/destination-auth"
              subPath: destination-auth
              readOnly: true
            {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: cache
          emptyDir: {}
        - name: build
          emptyDir: {}
        {{- if .Values.build.configMap.enabled }}
        - name: config
          configMap:
            name: {{ .Values.build.configMap.name | default (include "container-build.fullname" .) }}
        {{- end }}
        {{- if and (.Values.build.git.enabled) (.Values.build.git.authSecret.enabled) }}
        - name: ssh-key
          secret:
            secretName: {{ .Values.build.git.authSecret.name | default (include "container-build.configAuthSecretName" .) }}
            items:
              - key: ssh-privatekey
                path: id_rsa
        {{- end }}
        {{- if .Values.build.source.authSecret.enabled }}
        - name: source-auth
          secret:
            secretName: {{ .Values.build.source.authSecret.name | default (include "container-build.sourceAuthSecretName" .) }}
            items:
              - key: .dockerconfigjson
                path: source-auth
        {{- end }}
        {{- if .Values.build.destination.authSecret.enabled }}
        - name: destination-auth
          secret:
            secretName: {{ .Values.build.destination.authSecret.name | default (include "container-build.destinationAuthSecretName" .) }}
            items:
              - key: .dockerconfigjson
                path: destination-auth
        {{- end }}
      restartPolicy: {{ .Values.podRestartPolicy }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
